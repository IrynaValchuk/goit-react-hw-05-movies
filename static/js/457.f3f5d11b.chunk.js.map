{"version":3,"file":"static/js/457.f3f5d11b.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAqD,uB,SC8BrD,EA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGAC4BC,EAAAA,EAAAA,IAAgBN,GAD5C,OACOO,EADP,OAECH,EAAWG,GAFZ,0CAAD,GAGKC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACjB,GAAE,CAACT,KAGF,+BACE,eAAIY,UAAWC,EAAf,SACsB,IAAnBV,EAAQW,OACL,2CACAX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,cAAGN,UAAWC,EAAd,SAA0BI,KAC1B,uBAAIC,MAFGF,EADC,OASvB,C,sVC7BKG,EAAW,+BACXC,EAAU,mCCDHC,EAAkB,SAAAC,GAC7B,OAAOA,EAAOP,KAAI,kBAAiC,CACjDC,GADgB,EAAGA,GAEnBO,MAFgB,EAAOA,MAGvBC,YAHgB,EAAcA,YAAd,GAKnB,ECGYC,EAAgB,mCAAG,8FACjBC,EAAAA,EAAAA,IAAA,UACHP,EADG,uCACoCC,IAC9CO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAAgBO,EAAKC,QAAnC,IAHsB,mFAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,iFACfL,EAAAA,EAAAA,IAAA,UACHP,EADG,iCAC8BC,EAD9B,kBAC+CW,IACzDJ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,EAAgBO,EAAKC,QAAnC,IAHoB,mFAAH,sDAMdG,EAAY,mCAAG,WAAMhC,GAAN,iFACb0B,EAAAA,EAAAA,IAAA,UACHP,EADG,kBACenB,EADf,oBACkCoB,IAC5CO,MAAK,gBCxBqB,EDwBlBC,EAAH,EAAGA,KAAH,MClBH,CACLL,OAP6B,EDwBQK,GCvBrCL,MAOAC,YAR4B,EAE5BA,YAOAS,OAT4B,EAG5BA,OAOAC,SAV4B,EAI5BA,SAOAC,OAX4B,EAK5BC,aDmBQ,IAHkB,mFAAH,sDAMZC,EAAY,mCAAG,WAAMrC,GAAN,iFACb0B,EAAAA,EAAAA,IAAA,UACHP,EADG,kBACenB,EADf,4BAC0CoB,IACpDO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAiCA,EAAKU,KE7BlCvB,KAAI,kBAA4C,CAC1DC,GADc,EAAGA,GAEjBuB,KAFc,EAAOA,KAGrBC,UAHc,EAAaA,UAI3BC,aAJc,EAAwBA,aAAxB,GF6BR,IAHkB,mFAAH,sDAMZnC,EAAe,mCAAG,WAAMN,GAAN,iFAChB0B,EAAAA,EAAAA,IAAA,UACHP,EADG,kBACenB,EADf,4BAC0CoB,IACpDO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAoCA,EAAKC,QGnClCd,KAAI,kBAA8B,CAC/CC,GADiB,EAAGA,GAEpBC,OAFiB,EAAOA,OAGxBC,QAHiB,EAAeA,QAAf,GHmCX,IAHqB,mFAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","constants/api.js","helpers/transformMovies.js","services/movies-api.js","helpers/transformMovie.js","helpers/transformMovieCast.js","helpers/transformMovieReviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"title\":\"Reviews_title__t265C\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services';\nimport css from 'components/Reviews/Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews);\n    })().catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <ul className={css.list}>\n        {reviews.length === 0\n          ? \"We don't have any reviews for this movie\"\n          : reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p className={css.title}>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '01293fbdb6ddf6c5485f2ddd9eccd7b8';\n\nexport { BASE_URL, API_KEY };\n","export const transformMovies = movies => {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n};\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\nimport {\n  transformMovies,\n  transformMovie,\n  transformMovieCast,\n  transformMovieReviews,\n} from 'helpers';\n\nexport const getPopularMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovies(data.results));\n};\n\nexport const getSearchMovie = async movieName => {\n  return await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movieName}`)\n    .then(({ data }) => transformMovies(data.results));\n};\n\nexport const getMovieById = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovie(data));\n};\n\nexport const getMovieCast = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovieCast(data.cast));\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovieReviews(data.results));\n};\n","export const transformMovie = ({\n  title,\n  poster_path,\n  genres,\n  overview,\n  vote_average,\n}) => ({\n  title,\n  poster_path,\n  genres,\n  overview,\n  rating: vote_average,\n});\n","export const transformMovieCast = cast => {\n  return cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profile_path,\n  }));\n};\n","export const transformMovieReviews = reviews => {\n  return reviews.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","movieReviews","catch","error","console","log","className","css","length","map","id","author","content","BASE_URL","API_KEY","transformMovies","movies","title","poster_path","getPopularMovies","axios","then","data","results","getSearchMovie","movieName","getMovieById","genres","overview","rating","vote_average","getMovieCast","cast","name","character","profile_path"],"sourceRoot":""}
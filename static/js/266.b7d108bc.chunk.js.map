{"version":3,"file":"static/js/266.b7d108bc.chunk.js","mappings":"oQAsDA,UA7Ca,WACX,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCH,GAAa,GADd,UAEsBI,EAAAA,EAAAA,MAFtB,OAEOC,EAFP,OAGCP,EAAiBO,GACjBL,GAAa,GAJd,0CAAD,GAKKM,OAAM,SAAAC,GAAUC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SAAW,GACtD,GAAE,KAGD,iBAAKC,UAAU,YAAf,WACE,eAAIA,UAAU,QAAd,4BACCX,IAAa,SAAC,IAAD,KACd,eAAIW,UAAU,OAAd,SACGb,EAAcc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACjB,eAAaJ,UAAU,OAAvB,UACE,UAAC,KAAD,CACEA,UAAU,OACVK,GAAE,iBAAYH,GACdI,MAAO,CAAEC,KAAMhB,GAHjB,WAKE,gBACEiB,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,MAAM,QACNC,OAAO,QACPC,IAAKT,KAEP,cAAGH,UAAU,WAAb,SAAyBG,QAhBpBD,EADQ,QAwB1B,C,sVCpDKW,EAAW,+BACXC,EAAU,mCCDHC,EAAkB,SAAApB,GAC7B,OAAOA,EAAOM,KAAI,kBAAiC,CACjDC,GADgB,EAAGA,GAEnBC,MAFgB,EAAOA,MAGvBC,YAHgB,EAAcA,YAAd,GAKnB,ECGYV,EAAgB,mCAAG,8FACjBsB,EAAAA,EAAAA,IAAA,UACHH,EADG,uCACoCC,IAC9CG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAgBG,EAAKC,QAAnC,IAHsB,mFAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,iFACfL,EAAAA,EAAAA,IAAA,UACHH,EADG,iCAC8BC,EAD9B,kBAC+CO,IACzDJ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAgBG,EAAKC,QAAnC,IAHoB,mFAAH,sDAMdG,EAAY,mCAAG,WAAMC,GAAN,iFACbP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,oBACkCT,IAC5CG,MAAK,gBCxBqB,EDwBlBC,EAAH,EAAGA,KAAH,MClBH,CACLf,OAP6B,EDwBQe,GCvBrCf,MAOAC,YAR4B,EAE5BA,YAOAoB,OAT4B,EAG5BA,OAOAC,SAV4B,EAI5BA,SAOAC,OAX4B,EAK5BC,aDmBQ,IAHkB,mFAAH,sDAMZC,EAAY,mCAAG,WAAML,GAAN,iFACbP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,4BAC0CT,IACpDG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAiCA,EAAKW,KE7BlC5B,KAAI,kBAA4C,CAC1DC,GADc,EAAGA,GAEjB4B,KAFc,EAAOA,KAGrBC,UAHc,EAAaA,UAI3BC,aAJc,EAAwBA,aAAxB,GF6BR,IAHkB,mFAAH,sDAMZC,EAAe,mCAAG,WAAMV,GAAN,iFAChBP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,4BAC0CT,IACpDG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAoCA,EAAKC,QGnClClB,KAAI,kBAA8B,CAC/CC,GADiB,EAAGA,GAEpBgC,OAFiB,EAAOA,OAGxBC,QAHiB,EAAeA,QAAf,GHmCX,IAHqB,mFAAH,qD","sources":["pages/Home.js","constants/api.js","helpers/transformMovies.js","services/movies-api.js","helpers/transformMovie.js","helpers/transformMovieCast.js","helpers/transformMovieReviews.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getPopularMovies } from 'services';\nimport { Loader } from 'components';\nimport defaultImg from 'images/default-img.jpg';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const movies = await getPopularMovies();\n      setPopularMovies(movies);\n      setIsLoading(false);\n    })().catch(error => {toast.error(`${error.message}`)});\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Trending today</h1>\n      {isLoading && <Loader />}\n      <ul className=\"list\">\n        {popularMovies.map(({ id, title, poster_path }) => (\n          <li key={id} className=\"item\">\n            <Link\n              className=\"link\"\n              to={`movies/${id}`}\n              state={{ from: location }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultImg\n                }\n                width=\"350px\"\n                height=\"500px\"\n                alt={title}\n              />\n              <p className=\"subTitle\">{title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '01293fbdb6ddf6c5485f2ddd9eccd7b8';\n\nexport { BASE_URL, API_KEY };\n","export const transformMovies = movies => {\n  return movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path,\n  }));\n};\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\nimport {\n  transformMovies,\n  transformMovie,\n  transformMovieCast,\n  transformMovieReviews,\n} from 'helpers';\n\nexport const getPopularMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovies(data.results));\n};\n\nexport const getSearchMovie = async movieName => {\n  return await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movieName}`)\n    .then(({ data }) => transformMovies(data.results));\n};\n\nexport const getMovieById = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovie(data));\n};\n\nexport const getMovieCast = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovieCast(data.cast));\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios\n    .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(({ data }) => transformMovieReviews(data.results));\n};\n","export const transformMovie = ({\n  title,\n  poster_path,\n  genres,\n  overview,\n  vote_average,\n}) => ({\n  title,\n  poster_path,\n  genres,\n  overview,\n  rating: vote_average,\n});\n","export const transformMovieCast = cast => {\n  return cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profile_path,\n  }));\n};\n","export const transformMovieReviews = reviews => {\n  return reviews.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["useState","popularMovies","setPopularMovies","isLoading","setIsLoading","location","useLocation","useEffect","getPopularMovies","movies","catch","error","toast","message","className","map","id","title","poster_path","to","state","from","src","defaultImg","width","height","alt","BASE_URL","API_KEY","transformMovies","axios","then","data","results","getSearchMovie","movieName","getMovieById","movieId","genres","overview","rating","vote_average","getMovieCast","cast","name","character","profile_path","getMovieReviews","author","content"],"sourceRoot":""}